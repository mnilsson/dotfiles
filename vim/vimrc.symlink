
set nocompatible

" Plugins
call plug#begin('~/.vim/plugged')

Plug 'editorconfig/editorconfig-vim'
Plug 'Shougo/neocomplete.vim'
Plug 'tpope/vim-fugitive'
Plug 'kien/ctrlp.vim'
Plug 'scrooloose/nerdtree'
Plug 'w0rp/ale'
Plug 'Xuyuanp/nerdtree-git-plugin'
Plug 'mhinz/vim-signify'

Plug 'tpope/vim-repeat'
Plug 'tpope/vim-abolish'

Plug 'rking/ag.vim'
Plug 'vim-scripts/Colour-Sampler-Pack'
Plug 'majutsushi/tagbar'

Plug 'tpope/vim-dispatch'
Plug 'tpope/vim-flagship'
Plug 'tpope/vim-unimpaired'
Plug 'tpope/vim-commentary'


Plug 'neoclide/coc.nvim', {'branch': 'release'}

" Languages
Plug 'rust-lang/rust.vim'
Plug 'StanAngeloff/php.vim'
Plug 'groenewege/vim-less'
Plug 'pangloss/vim-javascript'
Plug 'lambdatoast/elm.vim'
Plug 'ekalinin/Dockerfile.vim'
Plug 'elixir-lang/vim-elixir'

call plug#end()

filetype plugin indent on

" Usability
set nobackup
set nowritebackup
set directory-=.

set timeout timeoutlen=1000 ttimeoutlen=100

" Fancy
syntax on


colorscheme jellybeans

set wildmode=list:longest,list:full

" Navigation
set number
set relativenumber
set mouse+=a
set backspace=indent,eol,start


" bindings
cnoremap %% <C-R>=expand('%:h').'/'<cr>
let mapleader = "\<space>"
nnoremap <leader>n :NERDTreeToggle<cr>

" function! InsertTabWrapper()
"   let col = col('.') - 1
"   if !col || getline('.')[col -1] !~ '\k'
"     return "\<tab>"
"   else
"     return "\<c-n>"
"   endif
" endfunction
" inoremap <tab> <c-r>=InsertTabWrapper()<cr>
" inoremap <s-tab> <c-n>

" Display
set listchars=tab:>-,trail:~,extends:>,precedes:<
set list
" CtrlP
let g:ctrlp_map = '<Leader>f'
let g:ctrlp_match_window_reversed = 0
let g:ctrlp_working_path_mode = 0
let g:ctrlp_switch_buffer = 0

let g:ctrlp_use_caching = 0
if executable('ag')
  set grepprg=ag\ --nogroup\ --nocolor

  let g:ctrlp_user_command = 'ag %s -l --nocolor -g ""'
endif


" " Syntastic
" let g:syntastic_check_on_open=1
" let g:syntastic_auto_loc_list=1
" let g:syntastic_aggregate_errors=1
" let g:syntastic_always_populate_loc_list=1
" let g:syntastic_error_symbol='✗'
" let g:syntastic_warning_symbol='⚠'

" let g:syntastic_php_checkers=['php', 'phpcs', 'phpmd']
" let g:syntastic_javascript_checkers=['jshint']
" if filereadable("phpcs.xml")
" 	let g:syntastic_php_phpcs_args='--standard=phpcs.xml -n'
" endif

let g:SuperTabDefaultCompletionType = "context"

" tagbar settings
let g:tagbar_autofocus = 1
map <Leader>rt :!ctags --extra=+f -R *<CR><CR>
map <Leader>. :TagbarToggle<CR>
map <Leader>ct :cscope f g <cword><CR>


" Statusline
set laststatus=2
set statusline=%<%f\ %h%m%r%{fugitive#statusline()}
set statusline+=%*
set statusline+=%=%-14.\(%l,%c%V%)\ %P


set statusline+=%#warningmsg#
" set statusline+=%{SyntasticStatuslineFlag()}
set statusline+=%*


" Flagship
autocmd User Flags call Hoist("buffer", "fugitive#statusline")
autocmd User Flags call Hoist("window", "SyntasticStatuslineFlag")
autocmd User Flags call Hoist("global", "%{&ignorecase ? '[IC]' : ''}")



" NERDTress File highlighting
function! NERDTreeHighlightFile(extension, fg, bg, guifg, guibg)
 exec 'autocmd filetype nerdtree highlight ' . a:extension .' ctermbg='. a:bg .' ctermfg='. a:fg .' guibg='. a:guibg .' guifg='. a:guifg
 exec 'autocmd filetype nerdtree syn match ' . a:extension .' #^\s\+.*'. a:extension .'$#'
endfunction

call NERDTreeHighlightFile('jade', 'green', 'none', 'green', '#151515')
call NERDTreeHighlightFile('ini', 'yellow', 'none', 'yellow', '#151515')
call NERDTreeHighlightFile('md', 'blue', 'none', '#3366FF', '#151515')
call NERDTreeHighlightFile('yml', 'yellow', 'none', 'yellow', '#151515')
call NERDTreeHighlightFile('config', 'yellow', 'none', 'yellow', '#151515')
call NERDTreeHighlightFile('conf', 'yellow', 'none', 'yellow', '#151515')
call NERDTreeHighlightFile('json', 'yellow', 'none', 'yellow', '#151515')
call NERDTreeHighlightFile('html', 'yellow', 'none', 'yellow', '#151515')
call NERDTreeHighlightFile('styl', 'cyan', 'none', 'cyan', '#151515')
call NERDTreeHighlightFile('css', 'cyan', 'none', 'cyan', '#151515')
call NERDTreeHighlightFile('coffee', 'Red', 'none', 'red', '#151515')
call NERDTreeHighlightFile('js', 'Red', 'none', '#ffa500', '#151515')
call NERDTreeHighlightFile('php', 'Magenta', 'none', '#ff00ff', '#151515')


let g:NERDTreeIndicatorMapCustom = {
    \ "Modified"  : "✹",
    \ "Staged"    : "✚",
    \ "Untracked" : "✭",
    \ "Renamed"   : "➜",
    \ "Unmerged"  : "═",
    \ "Deleted"   : "✖",
    \ "Dirty"     : "✗",
    \ "Clean"     : "✔︎",
    \ "Unknown"   : "?"
    \ }

let g:deoplete#enable_at_startup = 1



highlight TermCursor ctermfg=red guifg=red



" coc

inoremap <silent><expr> <TAB>
	\ pumvisible() ? "\<C-n>" :
	\ <SID>check_back_space() ? "\<TAB>" :
	\ coc#refresh()
inoremap <expr><S-TAB> pumvisible() ? "\<C-p>" : "\<C-h>"


function! s:check_back_space() abort
	let col = col('.') - 1
	return !col || getline('.')[col - 1] =~# '\s'
endfunction

